name: .NET CI Workflow

on:
  workflow_call:
    inputs:
      vmImage:
        type: string
        default: "ubuntu-latest"
        required: false
      gitRepo:
        required: false
        type: string
      nugetConfigPath:
        required: false
        type: string
      dotnetVersion:
        required: false
        default: "7.*"
        type: string
      testProjects:
        required: false
        type: string
      dockerBuildContext:
        required: false
        default: "."
        type: string
      dockerFile:
        required: false
        type: string
      dockerBuildArguments:
        required: false
        type: string
      repositoryName:
        required: false
        type: string
      migrationBundleArguments:
        required: false
        type: string
      migrationBundleAppSettingsPath:
        required: false
        type: string
      azureServicePrincipalClientId:
        required: false
        type: string
        default: ""
      azureTenantId:
        required: false
        type: string
        default: ""
jobs:
  test:
    if: ${{ inputs.testProjects != '' }}
    uses: norconsult-digital/.github/.github/workflows/dotnet-test.yml
    with:
      vmImage: ${{ inputs.vmImage }}
      testProjects: ${{ inputs.testProjects }}
      gitRepo: ${{ inputs.gitRepo }}
      dotnetVersion: ${{ inputs.dotnetVersion }}
      azureServicePrincipalClientId: ${{ inputs.azureServicePrincipalClientId }}
      azureTenantId: ${{ inputs.azureTenantId }}

  create_migration_bundle:
    if: ${{ inputs.migrationBundleArguments != '' }}
    uses: ./.github/workflows/efcore-migrations-bundle-create.yml
    with:
      gitRepo: ${{ inputs.gitRepo }}
      nugetConfigPath: ${{ inputs.nugetConfigPath }}
      migrationBundleArguments: ${{ inputs.migrationBundleArguments }}
      migrationBundleAppSettingsPath: ${{ inputs.migrationBundleAppSettingsPath }}
      dotnetVersion: ${{ inputs.dotnetVersion }}

  build_docker_image:
    needs: [test, create_migration_bundle]
    if: ${{ always() && inputs.dockerFile != '' && (needs.test.result == 'success' || needs.test.result == 'skipped') && (needs.create_migration_bundle.result == 'success' || needs.create_migration_bundle.result == 'skipped') }}
    uses: ./.github/workflows/docker-build-and-save.yml
    with:
      vmImage: ${{ inputs.vmImage }}
      gitRepo: ${{ inputs.gitRepo }}
      dockerBuildContext: ${{ inputs.dockerBuildContext }}
      dockerFile: ${{ inputs.dockerFile }}
      repositoryName: ${{ inputs.repositoryName }}
      dockerBuildArguments: ${{ inputs.dockerBuildArguments }}
