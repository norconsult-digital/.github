name: Python CD Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environmentName:
        required: true
        type: string
      allowedBranches:
        required: false
        default: '["main"]'
        type: string
      deploymentDelayInMinutes:
        required: false
        default: 0
        type: number
      artifactName:
        required: false
        default: 'container-image'
        type: string
      repositoryName:
        required: true
        type: string
      azureServicePrincipalId:
        required: true
        type: string
      dbConnection: 
        required: false
        type: string

permissions:
  id-token: write
  contents: read
  
jobs:
  delay_deployment:
    runs-on: ubuntu-latest    
    name: Delay deployment to ${{ inputs.environmentName }} for ${{ inputs.deploymentDelayInMinutes }} minutes 
    if: ${{ contains(fromJSON(inputs.allowedBranches), github.ref_name) || (startsWith(github.ref_name, 'release') && contains(fromJSON(inputs.allowedBranches), 'release')) }}
    steps:
      - name: Delay
        run: sleep ${{ inputs.deploymentDelayInMinutes }}m
  
  deploy:
    runs-on: private-ubuntu-runner
    environment: ${{ inputs.environment }}
    if: ${{ contains(fromJSON(inputs.allowedBranches), github.ref_name) || (startsWith(github.ref_name, 'release/') && contains(fromJSON(inputs.allowedBranches), 'release')) }}
    steps:      
      - name: Determine ACR name and ACR subscription based on environment
        run: |
          if [ "${{ inputs.environmentName }}" = "prod" ] || [ "${{ inputs.environmentName }}" = "stage" ]; then
            echo "ACR_NAME=crndsharedprod.azurecr.io" >> $GITHUB_ENV
            echo "AZURE_SUBSCRIPTION=a60c4c2a-c6d9-4940-85e5-bd1fa4a1dfea" >> $GITHUB_ENV
          else
            echo "ACR_NAME=crndsharednonprod.azurecr.io" >> $GITHUB_ENV
            echo "AZURE_SUBSCRIPTION=21eca75c-ed74-4f47-9f51-c0c345a00859" >> $GITHUB_ENV
          fi

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          client-id: ${{ inputs.azureServicePrincipalId }}
          tenant-id: '5546488e-16ae-4971-ba91-b12a928efaf8'
          subscription-id: ${{ env.AZURE_SUBSCRIPTION }}
      
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifactName }}

      - name: Load Docker image
        run: docker load --input image.tar

      - name: Set Docker image tag
        run: echo "imageTag=${{ inputs.environmentName }}-$(date +%s)" >> $GITHUB_ENV

      - name: Log in to the Azure Container Registry
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Retag Docker image
        run: |
          docker tag ${{ inputs.repositoryName }}:tmp ${{ env.ACR_NAME }}/${{ inputs.repositoryName }}:${{ env.imageTag }}

      - name: Push Docker image to ACR
        run: |
          docker push ${{ env.ACR_NAME }}/${{ inputs.repositoryName }}:${{ env.imageTag }}