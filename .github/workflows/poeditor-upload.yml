name: "POEditor Upload Workflow"

on:
  workflow_call:
    inputs:
      path:
        description: "The path to the project directory"
        required: true
        type: string
      outputPath:
        description: "The output path for the generated files"
        required: true
        default: "i18n-generated"
        type: string
      outputFileName:
        description: "The output file name"
        required: false
        default: "messages.xlf"
        type: string
      extractCommand:
        description: "The command to extract xlf files"
        required: true
        type: string
      nodeVersion:
        description: "The Node.js version to use"
        required: false
        default: "20.x"
        type: string
      packageManager:
        description: "npm or pnpm (optional, will auto-detect if not provided)"
        required: false
        type: string
      cacheDependencyPath:
        description: "Path to package-lock.json or pnpm-lock.yaml"
        required: false
        type: string
      pnpmVersion:
        description: "The version of pnpm to use"
        required: false
        default: "latest"
        type: string
      overwrite:
        description: "Overwrite existing files on upload"
        required: false
        default: true
        type: boolean
      projectId:
        required: true
        type: string
    secrets:
      API_KEY:
        required: true

jobs:
  upload-to-poeditor:
    runs-on: ubuntu-latest
    name: POEditor Upload
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Determine package manager
        run: |
          if [[ -z "${{ inputs.packageManager }}" ]]; then
            if [[ -f "${{ inputs.path }}/pnpm-lock.yaml" ]]; then
              echo "packageManager=pnpm" >> $GITHUB_ENV
            else
              echo "packageManager=npm" >> $GITHUB_ENV
            fi
          else
            echo "packageManager=${{ inputs.packageManager }}" >> $GITHUB_ENV
          fi
          echo "Using package manager: $packageManager"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion }}
          cache: ${{ env.packageManager }}
          cache-dependency-path: ${{ inputs.cacheDependencyPath || '' }}

      - name: Setup pnpm
        if: ${{ env.packageManager == 'pnpm' }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ inputs.pnpmVersion }}

      - name: Install dependencies
        run: |
          cd ${{ inputs.path }}
          if [[ "${{ env.packageManager" == "npm" ]]; then
            npm install
            npm install -g @angular/cli nx
          else
            pnpm install
            pnpm add -g @angular/cli nx
          fi

      - name: Extract i18n
        run: |
          cd "$INPUT_PATH"
          $INPUT_EXTRACTCOMMAND
        env:
          INPUT_PATH: ${{ inputs.path }}
          INPUT_EXTRACTCOMMAND: ${{ inputs.extractCommand }}


      - name: Upload to POEditor if file has changes
        run: |
          file="${{ inputs.path }}/${{ inputs.outputPath }}/${{ inputs.outputFileName }}"
          overwriteValue=$(echo "${{ inputs.overwrite }}" | grep -iq "true" && echo "1" || echo "0")
          if [ -f "$file" ] && ! git diff --exit-code -- "$file"; then
            echo "Differences found, uploading $file..."
            sleep 30
            curl -X POST https://api.poeditor.com/v2/projects/upload \
              -F api_token="${{ secrets.API_KEY }}" \
              -F id="${{ inputs.projectId }}" \
              -F updating="terms_translations" \
              -F language="en" \
              -F overwrite="$overwriteValue" \
              -F read_from_source="1" \
              -F fuzzy_trigger="1" \
              -F sync_terms="1" \
              -F file=@"$file" \
              -F tags="{\"obsolete\":\"removed-strings\"}"
          else
            echo "No differences found for $file."
          fi

      - name: Add changed xlf file and push
        run: |
          set -e
          file="${{ inputs.path }}/${{ inputs.outputPath }}/${{ inputs.outputFileName }}"
          if [ -f "$file" ] && ! git diff --quiet -- "$file"; then
            echo "Changes found in $file"
            git config --global user.email "$GITHUB_ACTOR_EMAIL"
            git config --global user.name "$GITHUB_ACTOR - automatic"
            git add "$file"
            # Skip push for protected main branch
            if [ "${GITHUB_REF#refs/heads/}" != "main" ]; then
              git pull --no-rebase origin "${GITHUB_REF#refs/heads/}"
              git commit -m "Automatic workflow update in $file"
              git push origin HEAD:"${GITHUB_REF#refs/heads/}"
            else
              echo "Skipping push to protected branch main."
            fi
          else
            echo "No changes in $file"
          fi
