name: .NET CD Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environmentName:
        required: true
        type: string
      allowedBranches:
        required: false
        default: '["main"]'
        type: string
      migrationBundleArguments:
        required: false
        default: ''
        type: string
      deploymentDelayInMinutes:
        required: false
        default: 0
        type: number
      artifactName:
        required: false
        default: 'container-image'
        type: string
      repositoryName:
        required: true
        type: string
      azureServicePrincipalId:
        required: true
        type: string
      dbConnection: 
        required: false
        type: string
      optionalDbConnection1: 
        required: false
        type: string
        description: "TEMPORARY: DO NOT USE OPTIONAL DB CONNECTIONS, THESE ARE TEMPORARY AND WILL BE REMOVED WITHOUT WARNING!"
      optionalDbConnection2:
        required: false
        type: string
        description: "TEMPORARY: DO NOT USE OPTIONAL DB CONNECTIONS, THESE ARE TEMPORARY AND WILL BE REMOVED WITHOUT WARNING!"

permissions:
  id-token: write
  contents: read
  
jobs:
  delay_deployment:
    runs-on: ubuntu-latest    
    name: Delay deployment to ${{ inputs.environmentName }} for ${{ inputs.deploymentDelayInMinutes }} minutes 
    if: ${{ contains(fromJSON(inputs.allowedBranches), github.ref_name) || (startsWith(github.ref_name, 'release/') && contains(fromJSON(inputs.allowedBranches), 'release')) }}
    steps:
      - name: Delay
        run: sleep ${{ inputs.deploymentDelayInMinutes }}m
  
  deploy:
    runs-on: private-ubuntu-runner
    environment: ${{ inputs.environment }}
    if: ${{ contains(fromJSON(inputs.allowedBranches), github.ref_name) || (startsWith(github.ref_name, 'release/') && contains(fromJSON(inputs.allowedBranches), 'release')) }}
    steps:      
      - name: Determine ACR name and ACR subscription based on environment
        id: acr_config
        shell: bash
        run: |
          if [ "${{ inputs.environmentName }}" = "prod" ] || [ "${{ inputs.environmentName }}" = "stage" ]; then
            echo "registry_name=crndsharedprod.azurecr.io" >> $GITHUB_OUTPUT
            echo "subscription=a60c4c2a-c6d9-4940-85e5-bd1fa4a1dfea" >> $GITHUB_OUTPUT
          else
            echo "registry_name=crndsharednonprod.azurecr.io" >> $GITHUB_OUTPUT
            echo "subscription=21eca75c-ed74-4f47-9f51-c0c345a00859" >> $GITHUB_OUTPUT
          fi

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          client-id: ${{ inputs.azureServicePrincipalId }}
          tenant-id: '5546488e-16ae-4971-ba91-b12a928efaf8'
          subscription-id: ${{ steps.acr_config.outputs.subscription }}

      - name: Download migrations artifact
        if: ${{ inputs.migrationBundleArguments != '' }}
        uses: actions/download-artifact@v4
        with:
          name: migrations-bundle
          path: migrations-bundle

      - name: Set executable permission for migrations-bundle and run
        if: ${{ inputs.migrationBundleArguments != '' }}
        run: |
          chmod +x ./migrations-bundle.exe
          ./migrations-bundle.exe --connection '${{ inputs.dbConnection }}' --verbose
        working-directory: ./migrations-bundle  

      # TEMPORARY: DO NOT USE OPTIONAL DB CONNECTIONS, THESE ARE TEMPORARY AND WILL BE REMOVED WITHOUT WARNING!"
      - name: Run migrations for optionalDbConnection1 if provided
        if: ${{ inputs.migrationBundleArguments != '' && inputs.optionalDbConnection1 != '' }}
        run: |
          chmod +x ./migrations-bundle.exe
          ./migrations-bundle.exe --connection '${{ inputs.optionalDbConnection1 }}' --verbose
        working-directory: ./migrations-bundle
        
      # TEMPORARY: DO NOT USE OPTIONAL DB CONNECTIONS, THESE ARE TEMPORARY AND WILL BE REMOVED WITHOUT WARNING!"
      - name: Run migrations for optionalDbConnection2 if provided
        if: ${{ inputs.migrationBundleArguments != '' && inputs.optionalDbConnection2 != '' }}
        run: |
          chmod +x ./migrations-bundle.exe
          ./migrations-bundle.exe --connection '${{ inputs.optionalDbConnection2 }}' --verbose
        working-directory: ./migrations-bundle
      
    
      - name: Build Docker image from source
        run: |
          docker buildx build \
            --file b2c-poc/app/Dockerfile \
            --tag ${{ inputs.repositoryName }}:tmp \
            b2c-poc/app \
            --load  

      - name: Generate image tag
        id: tag
        shell: bash
        run: |
          echo "value=${{ inputs.environmentName }}-$(date +%s)" >> $GITHUB_OUTPUT

      - name: Log in to the Azure Container Registry
        run: |
          az acr login --name $(echo "${{ steps.acr_config.outputs.registry_name }}" | cut -d'.' -f1)

      - name: Retag Docker image
        run: |
          docker tag ${{ inputs.repositoryName }}:tmp ${{ steps.acr_config.outputs.registry_name }}/${{ inputs.repositoryName }}:${{ steps.tag.outputs.value }}

      - name: Push Docker image to ACR
        run: |
          docker push ${{ steps.acr_config.outputs.registry_name }}/${{ inputs.repositoryName }}:${{ steps.tag.outputs.value }}
