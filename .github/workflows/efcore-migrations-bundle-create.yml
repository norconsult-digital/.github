name: Migrations Bundle Create

on:
  workflow_call:
    inputs:
      gitRepo:
        description: Git Repository
        required: false
        type: string
        default: ""
      nugetConfigPath:
        description: Path to NuGet.Config
        required: false
        type: string
        default: ""
      migrationBundleArguments:
        description: Arguments for the EF migrations bundle command
        required: true
        type: string
      migrationBundleAppSettingsPath:
        description: Path to appsettings.json for the migrations bundle
        required: true
        type: string
      dotnetVersion:
        description: .NET SDK version to use
        required: true
        type: string
        default: "7.*"

jobs:
  migrations-bundle-create:
    runs-on: ubuntu-latest
    name: Creat Migration Bundle
    steps:
      - name: Conditional Checkout
        if: ${{ inputs.gitRepo != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.gitRepo }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Default Checkout
        if: ${{ inputs.gitRepo == '' }}
        uses: actions/checkout@v4

      - name: Setup dotnet ${{ inputs.dotnetVersion }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnetVersion }}

      - name: Install EF tools
        run: dotnet tool install -g dotnet-ef --version ${{ inputs.dotnetVersion }}

      - name: Create migrations-bundle directory
        run: mkdir -p migrations-bundle

      - name: Copy NuGet.Config
        if: ${{ inputs.nugetConfigPath != '' }}
        run: cp -v ${{ inputs.nugetConfigPath }}/NuGet.Config $GITHUB_WORKSPACE

      - name: Replace GitHub Packages feed token in NuGet.Config files
        shell: pwsh
        run: |
          $nugetFiles = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Filter "NuGet.Config" -Recurse
          foreach ($file in $nugetFiles) {
              $content = Get-Content $file.FullName -Raw
              if ($content -match '<NorconsultDigital>') {
                  if ($content -match '<add key="ClearTextPassword" value="[^"]*"') {
                      $content = $content -replace '<add key="ClearTextPassword" value="[^"]*" />', "<add key=`"ClearTextPassword`" value=`"${{ secrets.GITHUB_TOKEN }}`" />"
                  }
                  Set-Content -Path $file.FullName -Value $content
              }
          }

      - name: Create dotnet ef migrations bundle
        run: dotnet ef migrations bundle ${{ inputs.migrationBundleArguments }} --self-contained --verbose --output migrations-bundle/migrations-bundle.exe

      - name: Copy appsettings.json to migrations-bundle
        run: cp -v ${{ inputs.migrationBundleAppSettingsPath }}/appsettings.json migrations-bundle/

      - name: Upload migrations bundle as artifact
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: migrations-bundle
          path: migrations-bundle/
