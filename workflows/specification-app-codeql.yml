# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "Specification APP CodeQL"
 
on:
  push:
    branches: 
    - 'main'
    paths:
      - 'frontend/src/apps/specification-app/**'
      - 'frontend/src/apps/specification-app-host/**'
  workflow_dispatch:
  pull_request:
    types: [opened, ready_for_review, synchronize]
    branches:
    - 'main'
    paths:
      - 'frontend/src/apps/specification-app/**'
      - 'frontend/src/apps/specification-app-host/**'
  schedule:
    - cron: '45 2 * * 4'
 
jobs:
  analyze-app:
    uses: ./.github/workflows/codeql-template.yml
    with: 
      path: 'frontend/src/apps/specification-app'
      language: ${{ matrix.language }}
      build-mode: ${{ matrix.build-mode }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: javascript-typescript
          build-mode: none
  analyze-apphost:
      uses: ./.github/workflows/codeql-template.yml
      with: 
        path: 'frontend/src/apps/specification-app-host'
        language: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
      strategy:
        fail-fast: false
        matrix:
          include:
          - language: csharp
            build-mode: none
        # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages